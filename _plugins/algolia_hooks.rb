module Jekyll
    module Algolia
      module Hooks
        def self.before_indexing_each(record, node, context)
          # Do not index feature rows
          return nil if node.matches?('.row1.0.image_path')
          return nil if node.matches?('.row1.1.image_path')
          return nil if node.matches?('.row1.2.image_path')
          return nil if node.matches?('.row2.0.image_path')
          return nil if node.matches?('.row2.1.image_path')
          return nil if node.matches?('.row2.2.image_path')
          return nil if node.matches?('.row3.0.image_path')
          return nil if node.matches?('.row3.1.image_path')
          return nil if node.matches?('.row3.2.image_path')
          return nil if node.matches?('.row4.0.image_path')
          return nil if node.matches?('.row4.1.image_path')
          return nil if node.matches?('.row4.2.image_path')
          return nil if node.matches?('.row5.0.image_path')
          return nil if node.matches?('.row5.1.image_path')
          return nil if node.matches?('.row5.2.image_path')
          return nil if node.matches?('.row1.0.title')
          return nil if node.matches?('.row1.1.title')
          return nil if node.matches?('.row1.2.title')
          return nil if node.matches?('.row2.0.title')
          return nil if node.matches?('.row2.1.title')
          return nil if node.matches?('.row2.2.title')
          return nil if node.matches?('.row3.0.title')
          return nil if node.matches?('.row3.1.title')
          return nil if node.matches?('.row3.2.title')
          return nil if node.matches?('.row4.0.title')
          return nil if node.matches?('.row4.1.title')
          return nil if node.matches?('.row4.2.title')
          return nil if node.matches?('.row5.0.title')
          return nil if node.matches?('.row5.1.title')
          return nil if node.matches?('.row5.2.title')
          return nil if node.matches?('.row1.0.url')
          return nil if node.matches?('.row1.1.url')
          return nil if node.matches?('.row1.2.url')
          return nil if node.matches?('.row2.0.url')
          return nil if node.matches?('.row2.1.url')
          return nil if node.matches?('.row2.2.url')
          return nil if node.matches?('.row3.0.url')
          return nil if node.matches?('.row3.1.url')
          return nil if node.matches?('.row3.2.url')
          return nil if node.matches?('.row4.0.url')
          return nil if node.matches?('.row4.1.url')
          return nil if node.matches?('.row4.2.url')
          return nil if node.matches?('.row5.0.url')
          return nil if node.matches?('.row5.1.url')
          return nil if node.matches?('.row5.2.url')
          return nil if node.matches?('.row1.0.excerpt')
          return nil if node.matches?('.row1.1.excerpt')
          return nil if node.matches?('.row1.2.excerpt')
          return nil if node.matches?('.row2.0.excerpt')
          return nil if node.matches?('.row2.1.excerpt')
          return nil if node.matches?('.row2.2.excerpt')
          return nil if node.matches?('.row3.0.excerpt')
          return nil if node.matches?('.row3.1.excerpt')
          return nil if node.matches?('.row3.2.excerpt')
          return nil if node.matches?('.row4.0.excerpt')
          return nil if node.matches?('.row4.1.excerpt')
          return nil if node.matches?('.row4.2.excerpt')
          return nil if node.matches?('.row5.0.excerpt')
          return nil if node.matches?('.row5.1.excerpt')
          return nil if node.matches?('.row5.2.excerpt')
          return nil if node.matches?('.row1.0.btn_label')
          return nil if node.matches?('.row1.1.btn_label')
          return nil if node.matches?('.row1.2.btn_label')
          return nil if node.matches?('.row2.0.btn_label')
          return nil if node.matches?('.row2.1.btn_label')
          return nil if node.matches?('.row2.2.btn_label')
          return nil if node.matches?('.row3.0.btn_label')
          return nil if node.matches?('.row3.1.btn_label')
          return nil if node.matches?('.row3.2.btn_label')
          return nil if node.matches?('.row4.0.btn_label')
          return nil if node.matches?('.row4.1.btn_label')
          return nil if node.matches?('.row4.2.btn_label')
          return nil if node.matches?('.row5.0.btn_label')
          return nil if node.matches?('.row5.1.btn_label')
          return nil if node.matches?('.row5.2.btn_label')
          return nil if node.matches?('.row1.0.btn_class')
          return nil if node.matches?('.row1.1.btn_class')
          return nil if node.matches?('.row1.2.btn_class')
          return nil if node.matches?('.row2.0.btn_class')
          return nil if node.matches?('.row2.1.btn_class')
          return nil if node.matches?('.row2.2.btn_class')
          return nil if node.matches?('.row3.0.btn_class')
          return nil if node.matches?('.row3.1.btn_class')
          return nil if node.matches?('.row3.2.btn_class')
          return nil if node.matches?('.row4.0.btn_class')
          return nil if node.matches?('.row4.1.btn_class')
          return nil if node.matches?('.row4.2.btn_class')
          return nil if node.matches?('.row5.0.btn_class')
          return nil if node.matches?('.row5.1.btn_class')
          return nil if node.matches?('.row5.2.btn_class')
          # Do not index sidebar
          return nil if node.matches?('.sidebar.0.image')
          return nil if node.matches?('.sidebar.0.title')
          return nil if node.matches?('.sidebar.0.image_alt')
          return nil if node.matches?('.sidebar.0.text')
          # Do not index author panel
          return nil if node.matches?('.author_profile')
          # Do not index comments flag
          return nil if node.matches?('.comments')
          # Do not index read time
          return nil if node.matches?('.read_time')
          # Do not index share flag
          return nil if node.matches?('.share')
          # Do not index related
          return nil if node.matches?('.related')
          # Do not index show date flag
          return nil if node.matches?('.show_date')
          # Do not index header styling
          return nil if node.matches?('.header.overlay_color')
          return nil if node.matches?('.header.overlay_filter')
          return nil if node.matches?('.header.teaser')
          # Do not index page class or type
          return nil if node.matches?('.classes')
          return nil if node.matches?('.type')
          # Do not index category duplicate
          return nil if node.matches?('.categories.0')
          # Do not index page slug or permalink
          return nil if node.matches?('.slug')
          return nil if node.matches?('.permalink')   
          # Do not index headings
          return nil if node.matches?('.headings')
          return nil if node.matches?('.headings.0')
          return nil if node.matches?('.headings.1')
          # Do not index anchor
          return nil if node.matches?('.anchor')
          # Do not index table of contents
          return nil if node.matches?('.toc')
          return nil if node.matches?('.toc_label')
          return nil if node.matches?('.toc_icon')
          # Do not index date
          return nil if node.matches?('.date')
          # Do not index ranking
          return nil if node.matches?('.custom_ranking.position')
          return nil if node.matches?('.custom_ranking.heading')
          # Do not index HTML version of excerpt
          return nil if node.matches?('.excerpt_html')
          # Do not index weird stuff
          return nil if node.matches?('.entries_layout')
          return nil if node.matches?('.objectID')
          record
        end
      end
    end
  end